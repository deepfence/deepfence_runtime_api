# coding: utf-8

"""
    Deepfence Runtime API v1.5

    Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider, container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.  # noqa: E501

    OpenAPI spec version: 1.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class Body3(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'policy_id_list': 'list[int]'
    }

    attribute_map = {
        'policy_id_list': 'policy_id_list'
    }

    def __init__(self, policy_id_list=None):  # noqa: E501
        """Body3 - a model defined in Swagger"""  # noqa: E501

        self._policy_id_list = None
        self.discriminator = None

        if policy_id_list is not None:
            self.policy_id_list = policy_id_list

    @property
    def policy_id_list(self):
        """Gets the policy_id_list of this Body3.  # noqa: E501

        List of policy ids  # noqa: E501

        :return: The policy_id_list of this Body3.  # noqa: E501
        :rtype: list[int]
        """
        return self._policy_id_list

    @policy_id_list.setter
    def policy_id_list(self, policy_id_list):
        """Sets the policy_id_list of this Body3.

        List of policy ids  # noqa: E501

        :param policy_id_list: The policy_id_list of this Body3.  # noqa: E501
        :type: list[int]
        """

        self._policy_id_list = policy_id_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Body3):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
