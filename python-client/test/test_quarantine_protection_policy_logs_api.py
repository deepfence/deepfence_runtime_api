# coding: utf-8

"""
    Deepfence Runtime API v1.3

    Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider, container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.  # noqa: E501

    OpenAPI spec version: 1.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import deepfence_runtime_api
from deepfence_runtime_api.api.quarantine_protection_policy_logs_api import QuarantineProtectionPolicyLogsApi  # noqa: E501
from deepfence_runtime_api.rest import ApiException


class TestQuarantineProtectionPolicyLogsApi(unittest.TestCase):
    """QuarantineProtectionPolicyLogsApi unit test stubs"""

    def setUp(self):
        self.api = deepfence_runtime_api.api.quarantine_protection_policy_logs_api.QuarantineProtectionPolicyLogsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_quarantine_protection_policy_log(self):
        """Test case for delete_quarantine_protection_policy_log

        Delete quarantine protection policy log by policy_log_id  # noqa: E501
        """
        pass

    def test_find_quarantine_protection_policy_logs(self):
        """Test case for find_quarantine_protection_policy_logs

        Get/Delete quarantine protection policy logs by filter  # noqa: E501
        """
        pass

    def test_get_quarantine_protection_policy_log(self):
        """Test case for get_quarantine_protection_policy_log

        Get quarantine protection policy log by given policy_log_id  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
