# coding: utf-8

"""
    Deepfence Runtime API v1.5

    Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider, container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.  # noqa: E501

    OpenAPI spec version: 1.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import deepfence_runtime_api
from deepfence_runtime_api.api.network_protection_policy_logs_api import NetworkProtectionPolicyLogsApi  # noqa: E501
from deepfence_runtime_api.rest import ApiException


class TestNetworkProtectionPolicyLogsApi(unittest.TestCase):
    """NetworkProtectionPolicyLogsApi unit test stubs"""

    def setUp(self):
        self.api = deepfence_runtime_api.api.network_protection_policy_logs_api.NetworkProtectionPolicyLogsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_network_protection_policy_log(self):
        """Test case for delete_network_protection_policy_log

        Delete network protection policy log by policy_log_id  # noqa: E501
        """
        pass

    def test_find_network_protection_policy_logs(self):
        """Test case for find_network_protection_policy_logs

        Get/Delete network protection policy logs by filter  # noqa: E501
        """
        pass

    def test_get_network_protection_policy_log(self):
        """Test case for get_network_protection_policy_log

        Get network protection policy log by given policy_log_id  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
