# coding: utf-8

"""
    Deepfence Runtime API v1.3

    Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider, container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.  # noqa: E501

    OpenAPI spec version: 1.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import deepfence_runtime_api
from deepfence_runtime_api.api.authentication_api import AuthenticationApi  # noqa: E501
from deepfence_runtime_api.rest import ApiException


class TestAuthenticationApi(unittest.TestCase):
    """AuthenticationApi unit test stubs"""

    def setUp(self):
        self.api = deepfence_runtime_api.api.authentication_api.AuthenticationApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_authenticate_api(self):
        """Test case for authenticate_api

        Authentication for API access  # noqa: E501
        """
        pass

    def test_get_user_details(self):
        """Test case for get_user_details

        User details.  # noqa: E501
        """
        pass

    def test_refresh_jwt_token(self):
        """Test case for refresh_jwt_token

        Generate a new access token using refresh token  # noqa: E501
        """
        pass

    def test_reset_api_key(self):
        """Test case for reset_api_key

        Reset API Key  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
