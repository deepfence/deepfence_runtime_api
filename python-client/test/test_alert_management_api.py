# coding: utf-8

"""
    Deepfence Runtime API v1.3

    Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider, container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.  # noqa: E501

    OpenAPI spec version: 1.3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import deepfence_runtime_api
from deepfence_runtime_api.api.alert_management_api import AlertManagementApi  # noqa: E501
from deepfence_runtime_api.rest import ApiException


class TestAlertManagementApi(unittest.TestCase):
    """AlertManagementApi unit test stubs"""

    def setUp(self):
        self.api = deepfence_runtime_api.api.alert_management_api.AlertManagementApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_alert(self):
        """Test case for delete_alert

        Delete an alert by alert_id  # noqa: E501
        """
        pass

    def test_find_alerts(self):
        """Test case for find_alerts

        Get/Delete alerts by filter  # noqa: E501
        """
        pass

    def test_get_alert(self):
        """Test case for get_alert

        Get alert by given alert_id  # noqa: E501
        """
        pass

    def test_get_node_severity(self):
        """Test case for get_node_severity

        Get the severity of all nodes  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
