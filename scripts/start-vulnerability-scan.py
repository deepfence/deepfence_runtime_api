import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)


def list_all_hosts(api_url, api_key):
    default_headers = {"Content-Type": "application/json", "Authorization": ""}
    api_response = requests.post("{0}/users/auth".format(api_url),
                                 json={"api_key": api_key}, headers=default_headers,
                                 verify=False).json()
    if api_response["success"]:
        print("Authentication successful")
    else:
        print("Authentication failed")
        return
    default_headers["Authorization"] = "Bearer " + api_response["data"]["access_token"]

    api_response = requests.post("{0}/enumerate".format(api_url),
                                 json={"filters": {"type": ["host", "container"], "pseudo": False}, "size": 1000},
                                 headers=default_headers, verify=False).json()
    nodes_list = []
    counter = 1
    print("\nDeepfence Vulnerability Scan")
    for node in api_response["data"]["data"]:
        node_name = "{0} (host)".format(node.get("host_name", "")) if node["type"] == "host" \
            else "{0} / {1} (Container)".format(node.get("container_name", ""), node.get("host_name", ""))
        print("{0}: {1}".format(counter, node_name))
        nodes_list.append({"id": node["id"], "node_name": node_name})
        counter += 1
    print("Enter comma separated list of node numbers to scan. Eg: 1,3,4")
    user_input = input("-->").split(",")
    for user_input_no in user_input:
        try:
            node = nodes_list[int(user_input_no) - 1]
            resp = requests.post("{0}/node/{1}/cve_scan_start".format(api_url, node["id"]),
                                 json={}, headers=default_headers, verify=False).json()
            print(node["node_name"], resp)
        except:
            pass


if __name__ == '__main__':
    import sys

    if len(sys.argv) != 3:
        print("Usage: python3 start-vulnerability-scan.py <mgmt_console_ip_address> <api_key>")
        exit(1)
    list_all_hosts("https://{0}/deepfence/v1.5".format(sys.argv[1]), sys.argv[2])
